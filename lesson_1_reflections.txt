How did viewing a diff between two versions of a file help you see the bug that was introduced?

-It was helpful because change to the code are what introduce or delete bugs. So a way to easily see the changes from older to newer versions of a file is helpful.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

-I'm not sure, maybe can help me analyzing where I went wrong. The more attinent, but simple, answer would be that it would help me to correct bugs introduced on the code.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

-With manually choosing you have control over the logic way of commiting. Writing a document doesn't really add more features or introduces bugs to it, so it's fine to be automatically saved.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
-Because files are highly interrelated between each other.


How can you use the commands git log and git diff to view the history of files?
-"git log" shows the history of the commits, using git diff between two commits i can see all the changes made by the commit.


How might using version control make you more confident to make changes that could break something?
-I can always go back and restore a working state of the project through "git checkout".


Now that you have your workspace set up, what do you want to try using Git for?
-I hope for every project since now...